// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using split_timer_api;

namespace split_timer_api.Migrations
{
    [DbContext(typeof(StDbContext))]
    partial class StDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("split_timer_api.Entities.Run", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("RunDate");

                    b.Property<long>("RunDefinitionId");

                    b.Property<long>("TotalTime");

                    b.HasKey("Id");

                    b.HasIndex("RunDefinitionId");

                    b.ToTable("Runs");
                });

            modelBuilder.Entity("split_timer_api.Entities.RunDefinition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category");

                    b.Property<string>("Game");

                    b.Property<string>("Name");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RunDefinitions");
                });

            modelBuilder.Entity("split_timer_api.Entities.Split", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("RunId");

                    b.Property<long>("SplitDefinitionId");

                    b.Property<long>("Time");

                    b.HasKey("Id");

                    b.HasIndex("RunId");

                    b.HasIndex("SplitDefinitionId");

                    b.ToTable("Splits");
                });

            modelBuilder.Entity("split_timer_api.Entities.SplitDefinition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("Order");

                    b.Property<long>("RunDefinitionId");

                    b.HasKey("Id");

                    b.HasIndex("RunDefinitionId");

                    b.ToTable("SplitDefinitions");
                });

            modelBuilder.Entity("split_timer_api.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("split_timer_api.Entities.Run", b =>
                {
                    b.HasOne("split_timer_api.Entities.RunDefinition", "RunDefinition")
                        .WithMany("Runs")
                        .HasForeignKey("RunDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("split_timer_api.Entities.RunDefinition", b =>
                {
                    b.HasOne("split_timer_api.Entities.User", "User")
                        .WithMany("RunDefinitions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("split_timer_api.Entities.Split", b =>
                {
                    b.HasOne("split_timer_api.Entities.Run", "Run")
                        .WithMany("Splits")
                        .HasForeignKey("RunId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("split_timer_api.Entities.SplitDefinition", "SplitDefinition")
                        .WithMany("Splits")
                        .HasForeignKey("SplitDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("split_timer_api.Entities.SplitDefinition", b =>
                {
                    b.HasOne("split_timer_api.Entities.RunDefinition", "RunDefinition")
                        .WithMany("SplitDefinitions")
                        .HasForeignKey("RunDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
